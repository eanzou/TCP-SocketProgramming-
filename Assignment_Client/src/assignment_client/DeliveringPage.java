/*
 * Teoh Ean Zou
 * SWE1804433
 * Tan Tian Lim
 * SWE1804420
 */

package assignment_client;

import static assignment_client.start.bar_title;
import static assignment_client.start.user;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

public class DeliveringPage extends javax.swing.JFrame {
    
    static Socket socket = null;
    static ObjectOutputStream oos = null;
    static ObjectInputStream ois = null;
    int pass_choose, takeonce; 
    String page = "Delivery";
    start start = new start(); 

    public DeliveringPage() {
        initComponents();
    }
    
     public DeliveringPage(Socket socket, ObjectOutputStream oos, ObjectInputStream ois, int pass_choose, int takeonce) throws IOException, ClassNotFoundException {
        initComponents();
        this.setTitle(bar_title + ": Client (" + user + ")");
        
        this.socket = socket;
        this.oos=oos;
        this.ois=ois;
        this.pass_choose = pass_choose;
        this.takeonce=takeonce;
        
        backhome.setEnabled(false);
        int del_time = (int) ois.readObject(); //get delivery time from server
        scale_image("delivery", image_label);
        move_image(del_time); 
        timer(del_time);
        
    }
     
     public void scale_image(String image, JLabel label)
     {
        ImageIcon delivery_guy = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass()
                                                .getResource(image+".png")));
        
        Image img1 = delivery_guy.getImage();
        Image img2 = img1.getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon i = new ImageIcon(img2);
        
        label.setIcon(i);
     }
     
     public void move_image(int del_time)
     {
         new Thread()
         {
             int start_pos = image_label.getX()-96;
             int final_pos = image_label.getX()+101; //101 is gap of panel
             
             int counter = del_time*4;
                public void run()
                {
                    while (counter >= 0)
                    {
                        if (image_label.getX() >= final_pos) //restart position when hit edge
                            image_label.setLocation(start_pos, image_label.getY());
                        else
                            image_label.setLocation(image_label.getX()+20, image_label.getY()); //make image looks like moving
                        try
                        {
                            Thread.sleep(250); //0.25 second delay
                        } catch (Exception e){}
                        counter--;
                    }
                }
         }.start();
     }
     
     public void timer(int del_time)
     { 
         new Thread()
         {
             int counter = del_time;
                public void run()
                {
                    while (counter >= 0)
                    {
                        counter_label.setText("Delivery in progress, " + (counter--) + " seconds remaining...");
                        try
                        {
                            Thread.sleep(1000); //1 second delay
                        } catch (Exception e){}
                    }
                    
                    scale_image("delivery_man", image_label);
                    image_label.setLocation(thankyou_label.getX(), image_label.getY());
                    scale_image("thank_you", thankyou_label);
                    thankyou_label.setLocation(thankyou_label.getX(), thankyou_label.getY());
                    
                    if (pass_choose == 0)
                        counter_label.setText("Parcel Delivered! Thank you for supporting us :)");
                    else if (pass_choose == 1)
                        counter_label.setText("Items Delivered! Thank you for supporting us :)");
                    else if (pass_choose == 2)
                        counter_label.setText("Food Delivered! Thank you for supporting us :)");
                    else
                        counter_label.setText("We arrived at your location and ready to help house moving :)");
                    backhome.setEnabled(true); //timer up then enable button
                 
                    try {
                     oos.writeObject(1); //inform server delivered
                    } catch (IOException ex) {}
                }
         }.start();
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backhome = new javax.swing.JButton();
        counter_label = new java.awt.Label();
        background = new javax.swing.JPanel();
        image_label = new javax.swing.JLabel();
        thankyou_label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(400, 350));
        setMinimumSize(new java.awt.Dimension(400, 350));

        backhome.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        backhome.setText("Back to Home Page");
        backhome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backhomeActionPerformed(evt);
            }
        });

        counter_label.setAlignment(java.awt.Label.CENTER);
        counter_label.setText("Delivery in Progress, 20 seconds remaining");

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(thankyou_label, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(image_label, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(101, Short.MAX_VALUE))
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundLayout.createSequentialGroup()
                .addGap(0, 38, Short.MAX_VALUE)
                .addComponent(image_label, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(thankyou_label, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(counter_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(backhome)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(counter_label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backhome)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backhomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backhomeActionPerformed
        // TODO add your handling code here:
        page = "Category"; 
        try {
            oos.writeObject(page); //pass page number
        } catch (IOException ex) {}
        
        CategoryPage category_page = new CategoryPage(socket, oos, ois, takeonce);
        category_page.setLocation(this.getX(), this.getY());
        category_page.setVisible(true); //pass details to next page
        this.setVisible(false);
    }//GEN-LAST:event_backhomeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeliveringPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeliveringPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeliveringPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeliveringPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeliveringPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JButton backhome;
    private java.awt.Label counter_label;
    private javax.swing.JLabel image_label;
    private javax.swing.JLabel thankyou_label;
    // End of variables declaration//GEN-END:variables
}
